{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.js","components/FeedBackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/App.js","index.js","components/FeedBackOptions/FeedBackOptions.module.css","components/Notification/Notification.module.css"],"names":["module","exports","Section","title","children","FeedbackOptions","options","onLeaveFeedback","className","s","box","map","option","button","name","key","onClick","Statistics","good","neutral","bad","total","positivePercentage","list","listItem","Notification","App","state","keys","Object","countTotalFeedback","values","reduce","acc","value","countPositiveFeedbackPercentage","Math","round","increment","e","target","setState","prevState","this","Component","ReactDOM","render","document","querySelector"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,2B,mJCgBVC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,iCACE,4BAAKD,GACJC,I,gBCsBQC,EAxBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,yBAAKC,UAAWC,IAAEC,KACfJ,EAAQK,KAAI,SAACC,GACZ,OACE,4BACEJ,UAAWC,IAAEI,OACbC,KAAMF,EACNG,IAAKH,EACLI,QAAST,GAERK,Q,gBCaEK,EAxBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,6BACE,wBAAId,UAAWC,IAAEc,MACf,wBAAIf,UAAWC,IAAEe,UAAjB,gBAAqCN,IACrC,wBAAIV,UAAWC,IAAEe,UAAjB,mBAAwCL,IACxC,wBAAIX,UAAWC,IAAEe,UAAjB,eAAoCJ,IACpC,wBAAIZ,UAAWC,IAAEe,UAAjB,iBAAsCH,IACtC,wBACEb,UAAWC,IAAEe,UADf,6BAEwBF,EAFxB,S,gBCFOG,EANM,SAAC,GAAD,IAAGtB,EAAH,EAAGA,MAAH,OAAe,wBAAIK,UAAWC,IAAEN,OAAQA,ICoD9CuB,E,4MAjDbC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPQ,KAAOC,OAAOD,KAAK,EAAKD,O,EAExBG,mBAAqB,WAEnB,OAAOD,OAAOE,OAAO,EAAKJ,OAAOK,QADnB,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,M,EAItCC,gCAAkC,WAChC,IAAMd,EAAQ,EAAKS,qBACXZ,EAAS,EAAKS,MAAdT,KAER,OAAOkB,KAAKC,MAAOnB,EAAOG,EAAS,M,EAGrCiB,UAAY,SAACC,GACX,IAAMxB,EAAMwB,EAAEC,OAAO1B,KACrB,EAAK2B,UAAS,SAACC,GAAD,sBAAmB3B,EAAM2B,EAAU3B,GAAO,O,uDAIxD,IAAMa,EAAOC,OAAOD,KAAKe,KAAKhB,OAC9B,OACE,oCACE,kBAAC,EAAD,CAASxB,MAAM,yBACb,kBAAC,EAAD,CAAiBG,QAASsB,EAAMrB,gBAAiBoC,KAAKL,aAGxD,kBAAC,EAAD,CAASnC,MAAM,cACZwC,KAAKb,qBACJ,kBAAC,EAAD,iBACMa,KAAKhB,MADX,CAEEN,MAAOsB,KAAKb,qBACZR,mBAAoBqB,KAAKR,qCAG3B,kBAAC,EAAD,CAAchC,MAAO,4B,GA1CfyC,aCFlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W,kBCJhDhD,EAAOC,QAAU,CAAC,IAAM,6BAA6B,OAAS,kC,kBCA9DD,EAAOC,QAAU,CAAC,MAAQ,+B","file":"static/js/main.ac91fed7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__1oj6W\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport s from \"./FeedBackOptions.module.css\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div className={s.box}>\r\n      {options.map((option) => {\r\n        return (\r\n          <button\r\n            className={s.button}\r\n            name={option}\r\n            key={option}\r\n            onClick={onLeaveFeedback}\r\n          >\r\n            {option}\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport s from \"./Statistics.module.css\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <div>\r\n      <ul className={s.list}>\r\n        <li className={s.listItem}>{`Good: ${good}`}</li>\r\n        <li className={s.listItem}>{`Neutral: ${neutral}`}</li>\r\n        <li className={s.listItem}>{`Bad: ${bad}`}</li>\r\n        <li className={s.listItem}>{`Total: ${total}`}</li>\r\n        <li\r\n          className={s.listItem}\r\n        >{`Positive feedback: ${positivePercentage}%`}</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport s from \"./Notification.module.css\";\r\n\r\nconst Notification = ({ title }) => <h2 className={s.title}>{title}</h2>;\r\n\r\nNotification.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Section from \"./Section/Section\";\r\nimport FeedbackOptions from \"./FeedBackOptions/FeedbackOptions\";\r\nimport Statistics from \"./Statistics/Statistics\";\r\nimport Notification from \"./Notification/Notification\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  keys = Object.keys(this.state);\r\n\r\n  countTotalFeedback = () => {\r\n    const total = (acc, value) => acc + value;\r\n    return Object.values(this.state).reduce(total);\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const total = this.countTotalFeedback();\r\n    const { good } = this.state;\r\n\r\n    return Math.round((good / total) * 100);\r\n  };\r\n\r\n  increment = (e) => {\r\n    const key = e.target.name;\r\n    this.setState((prevState) => ({ [key]: prevState[key] + 1 }));\r\n  };\r\n\r\n  render() {\r\n    const keys = Object.keys(this.state);\r\n    return (\r\n      <>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions options={keys} onLeaveFeedback={this.increment} />\r\n        </Section>\r\n\r\n        <Section title=\"Statistics\">\r\n          {this.countTotalFeedback() ? (\r\n            <Statistics\r\n              {...this.state}\r\n              total={this.countTotalFeedback()}\r\n              positivePercentage={this.countPositiveFeedbackPercentage()}\r\n            />\r\n          ) : (\r\n            <Notification title={\"No feedback given\"} />\r\n          )}\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"FeedBackOptions_box__3aKts\",\"button\":\"FeedBackOptions_button__gAPFo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Notification_title__33roU\"};"],"sourceRoot":""}